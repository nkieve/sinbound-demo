{"version":3,"file":"static/js/354.ce36c697.chunk.js","mappings":"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","sources":["../node_modules/@react-three/drei/helpers/constants.js","../node_modules/@react-three/drei/core/Stars.js","pages/TrackPlayer.js"],"sourcesContent":["import { REVISION } from 'three';\n\nconst getVersion = () => parseInt(REVISION.replace(/\\D+/g, ''));\nconst version = /* @__PURE__ */getVersion();\n\nexport { version };\n","import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Color, AdditiveBlending, ShaderMaterial, Vector3, Spherical } from 'three';\nimport { version } from '../helpers/constants.js';\n\nclass StarfieldMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        time: {\n          value: 0.0\n        },\n        fade: {\n          value: 1.0\n        }\n      },\n      vertexShader: /* glsl */`\n      uniform float time;\n      attribute float size;\n      varying vec3 vColor;\n      void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\n        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(time + 100.0));\n        gl_Position = projectionMatrix * mvPosition;\n      }`,\n      fragmentShader: /* glsl */`\n      uniform sampler2D pointTexture;\n      uniform float fade;\n      varying vec3 vColor;\n      void main() {\n        float opacity = 1.0;\n        if (fade == 1.0) {\n          float d = distance(gl_PointCoord, vec2(0.5, 0.5));\n          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\n        }\n        gl_FragColor = vec4(vColor, opacity);\n\n        #include <tonemapping_fragment>\n\t      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n      }`\n    });\n  }\n}\nconst genStar = r => {\n  return new Vector3().setFromSpherical(new Spherical(r, Math.acos(1 - Math.random() * 2), Math.random() * 2 * Math.PI));\n};\nconst Stars = /* @__PURE__ */React.forwardRef(({\n  radius = 100,\n  depth = 50,\n  count = 5000,\n  saturation = 0,\n  factor = 4,\n  fade = false,\n  speed = 1\n}, ref) => {\n  const material = React.useRef(null);\n  const [position, color, size] = React.useMemo(() => {\n    const positions = [];\n    const colors = [];\n    const sizes = Array.from({\n      length: count\n    }, () => (0.5 + 0.5 * Math.random()) * factor);\n    const color = new Color();\n    let r = radius + depth;\n    const increment = depth / count;\n    for (let i = 0; i < count; i++) {\n      r -= increment * Math.random();\n      positions.push(...genStar(r).toArray());\n      color.setHSL(i / count, saturation, 0.9);\n      colors.push(color.r, color.g, color.b);\n    }\n    return [new Float32Array(positions), new Float32Array(colors), new Float32Array(sizes)];\n  }, [count, depth, factor, radius, saturation]);\n  useFrame(state => material.current && (material.current.uniforms.time.value = state.clock.elapsedTime * speed));\n  const [starfieldMaterial] = React.useState(() => new StarfieldMaterial());\n  return /*#__PURE__*/React.createElement(\"points\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [position, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [color, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [size, 1]\n  })), /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: material,\n    object: starfieldMaterial,\n    attach: \"material\",\n    blending: AdditiveBlending,\n    \"uniforms-fade-value\": fade,\n    depthWrite: false,\n    transparent: true,\n    vertexColors: true\n  }));\n});\n\nexport { Stars };\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { Stars, OrbitControls } from '@react-three/drei';\n// Add import for URL param parsing\n\nexport default function TrackPlayer({ cameraState }) {\n  const logoStyle = {\n    width: 'min(180px, 40vw)',\n    height: 'auto',\n    margin: '40px auto 20px auto',\n    display: 'block',\n    maxWidth: '90vw',\n    filter: 'drop-shadow(0 0 24px #6cf) drop-shadow(0 0 8px #fff)',\n    pointerEvents: 'none',\n    transition: 'filter 0.3s',\n  };\n  const dividerStyle = {\n    width: 370,\n    maxWidth: '90%',\n    height: 33,\n    margin: '40px auto 0 auto',\n    display: 'block',\n  };\n  const footerStyle = {\n    textAlign: 'center',\n    margin: '20px 0',\n    color: '#fff',\n    fontFamily: 'inherit',\n    fontSize: '1rem',\n  };\n  const footerLinkStyle = {\n    color: '#fff',\n    textDecoration: 'none',\n    margin: '0 15px',\n    transition: 'color 0.3s ease',\n  };\n\n  const [tracks, setTracks] = useState([]);\n  const [current, setCurrent] = useState(0);\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [mouseParallax, setMouseParallax] = useState(true);\n  const [audioLevel, setAudioLevel] = useState(0);\n  const [showSpinText, setShowSpinText] = useState(true);\n  const [needsUserInteraction, setNeedsUserInteraction] = useState(false);\n\n  // Helper to get URL param\n  function getMixParam() {\n    const params = new URLSearchParams(window.location.search);\n    return params.get('mix');\n  }\n\n  useEffect(() => {\n    fetch(process.env.PUBLIC_URL + 'https://sinbound.online.s3.amazonaws.com/public/songdatabase.json')\n      .then(res => res.json())\n      .then((data) => {\n        const mixId = getMixParam();\n        if (mixId) {\n          // Only show the song with this id\n          const filtered = data.filter(song => String(song.id) === String(mixId));\n          setTracks(filtered);\n        } else {\n          setTracks(data);\n        }\n      })\n      .catch(() => setTracks([]));\n  }, []);\n\n  useEffect(() => {\n    if (audioRef.current && tracks.length > 0) {\n      audioRef.current.src = process.env.PUBLIC_URL + '/' + tracks[current].link;\n      if (isPlaying) {\n        audioRef.current.play();\n      } else {\n        audioRef.current.pause();\n      }\n    }\n  }, [current, isPlaying, tracks]);\n\n  const play = () => setIsPlaying(true);\n  const pause = () => setIsPlaying(false);\n  const stop = () => {\n    setIsPlaying(false);\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n      audioRef.current.pause();\n    }\n  };\n  const next = () => setCurrent((current + 1) % tracks.length);\n  const prev = () => setCurrent((current - 1 + tracks.length) % tracks.length);\n  const selectTrack = (idx) => {\n    setCurrent(idx);\n    setIsPlaying(true);\n  };\n\n  // Track progress state\n  const [trackProgress, setTrackProgress] = useState(0); // 0 to 1\n  const [trackDuration, setTrackDuration] = useState(0);\n  const [trackCurrent, setTrackCurrent] = useState(0);\n\n  // Update progress as the track plays\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    function updateProgress() {\n      setTrackCurrent(audio.currentTime);\n      setTrackDuration(audio.duration || 0);\n      setTrackProgress(audio.duration ? audio.currentTime / audio.duration : 0);\n    }\n    audio.addEventListener('timeupdate', updateProgress);\n    audio.addEventListener('loadedmetadata', updateProgress);\n    return () => {\n      audio.removeEventListener('timeupdate', updateProgress);\n      audio.removeEventListener('loadedmetadata', updateProgress);\n    };\n  }, [audioRef, current]);\n\n  // Play/pause/seek handlers\n  const handlePlay = () => { audioRef.current && audioRef.current.play(); setIsPlaying(true); };\n  const handlePause = () => { audioRef.current && audioRef.current.pause(); setIsPlaying(false); };\n  const handlePrev = prev;\n  const handleNext = next;\n  const handleSeek = (e) => {\n    if (!audioRef.current || !trackDuration) return;\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const percent = Math.max(0, Math.min(1, x / rect.width));\n    audioRef.current.currentTime = percent * trackDuration;\n  };\n\n  // On mount, restore play state and track index from localStorage\n  useEffect(() => {\n    const savedPlaying = localStorage.getItem('trackplayer_isPlaying');\n    const savedTrack = localStorage.getItem('trackplayer_current');\n    if (savedTrack !== null) setCurrent(Number(savedTrack));\n    if (savedPlaying === 'true') setIsPlaying(true);\n  }, []);\n\n  // On mount, if isPlaying is true, try to play, but if blocked, require user interaction\n  useEffect(() => {\n    if (!isPlaying) return;\n    const audio = audioRef.current;\n    if (!audio) return;\n    // Try to play immediately\n    const tryPlay = () => {\n      audio.play().catch((err) => {\n        if (err && err.name === 'NotAllowedError') {\n          setNeedsUserInteraction(true);\n        }\n      });\n    };\n    tryPlay();\n  }, [isPlaying, current]);\n\n  // Listen for user interaction if needed\n  useEffect(() => {\n    if (!needsUserInteraction) return;\n    const audio = audioRef.current;\n    if (!audio) return;\n    const onUserInteract = () => {\n      audio.play().finally(() => {\n        setNeedsUserInteraction(false);\n        window.removeEventListener('pointerdown', onUserInteract);\n        window.removeEventListener('keydown', onUserInteract);\n      });\n    };\n    window.addEventListener('pointerdown', onUserInteract);\n    window.addEventListener('keydown', onUserInteract);\n    return () => {\n      window.removeEventListener('pointerdown', onUserInteract);\n      window.removeEventListener('keydown', onUserInteract);\n    };\n  }, [needsUserInteraction]);\n\n  // Save play state and track index to localStorage\n  useEffect(() => {\n    localStorage.setItem('trackplayer_isPlaying', isPlaying);\n    localStorage.setItem('trackplayer_current', current);\n  }, [isPlaying, current]);\n\n  // On audio loaded, auto-play if isPlaying is true\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    function onLoaded() {\n      if (isPlaying && audio.paused) {\n        audio.play().catch(() => {});\n      }\n    }\n    audio.addEventListener('loadeddata', onLoaded);\n    return () => audio.removeEventListener('loadeddata', onLoaded);\n  }, [isPlaying, current]);\n\n  // On mount, sync UI state with audio element\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    function syncState() {\n      setIsPlaying(!audio.paused && !audio.ended);\n    }\n    audio.addEventListener('play', syncState);\n    audio.addEventListener('pause', syncState);\n    audio.addEventListener('ended', syncState);\n    return () => {\n      audio.removeEventListener('play', syncState);\n      audio.removeEventListener('pause', syncState);\n      audio.removeEventListener('ended', syncState);\n    };\n  }, []);\n\n  // Fullscreen flex container for immersive experience\n  const fullscreenStyle = {\n    minHeight: '100vh',\n    width: '100vw',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: 'black',\n    position: 'relative',\n    overflow: 'hidden',\n  };\n\n  // Overlay for player controls/info\n  const overlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n    pointerEvents: 'none',\n  };\n  const playerBoxStyle = {\n    background: 'rgba(20,20,30,0.82)',\n    borderRadius: 24,\n    boxShadow: '0 8px 48px 0 #000a, 0 1.5px 8px #6cf8',\n    padding: '48px 32px 32px 32px',\n    minWidth: 340,\n    maxWidth: 520,\n    width: '90vw',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    pointerEvents: 'auto',\n    border: '1.5px solid #6cf4',\n  };\n\n  // Custom controls bar style\n  const controlsBarStyle = {\n    position: 'absolute',\n    left: '50%',\n    bottom: '6vh',\n    transform: 'translateX(-50%)',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 48,\n    zIndex: 10,\n    background: 'rgba(20,20,30,0.55)',\n    borderRadius: 32,\n    boxShadow: '0 4px 32px #000a',\n    padding: '18px 36px',\n    pointerEvents: 'auto',\n  };\n  const buttonStyle = {\n    background: 'none',\n    border: 'none',\n    cursor: 'pointer',\n    padding: 0,\n    outline: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 16,\n    transition: 'background 0.2s',\n  };\n  const iconStyle = {\n    height: '3.2em',\n    width: 'auto',\n    filter: 'drop-shadow(0 0 8px #6cf8)',\n    userSelect: 'none',\n    pointerEvents: 'none',\n  };\n\n  // Placeholder for 3D animated background\n  // In the future, replace this with a real 3D/WebGL/canvas animation\n  const animationPlaceholder = (\n    <div style={{\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      zIndex: 1,\n      background: 'radial-gradient(ellipse at 50% 60%, #222 60%, #0af 100%)',\n      opacity: 0.7,\n      pointerEvents: 'none',\n      filter: 'blur(2px) saturate(1.2)',\n    }}>\n      {/* TODO: Replace with 3D animation that reacts to music */}\n    </div>\n  );\n\n  function ParallaxUniverse({ audioRef, mouseParallax, onAudioLevel }) {\n    const group = useRef();\n    const { camera, size, gl, scene } = useThree();\n    const [mouse, setMouse] = useState({ x: 0, y: 0 });\n    // Store AudioContext and source node refs\n    const audioCtxRef = useRef(null);\n    const analyserRef = useRef(null);\n    const dataArrayRef = useRef(null);\n    const [freqData, setFreqData] = useState(new Uint8Array(256));\n\n    useEffect(() => {\n      let raf;\n      function setupAudio() {\n        if (!audioRef.current) return;\n        // Use a property on the audio element to track if a source node has already been created\n        if (!audioRef.current._mediaElementSourceNode) {\n          if (!audioCtxRef.current) {\n            audioCtxRef.current = new (window.AudioContext || window.webkitAudioContext)();\n          }\n          audioRef.current._mediaElementSourceNode = audioCtxRef.current.createMediaElementSource(audioRef.current);\n          analyserRef.current = audioCtxRef.current.createAnalyser();\n          audioRef.current._mediaElementSourceNode.connect(analyserRef.current);\n          analyserRef.current.connect(audioCtxRef.current.destination);\n          analyserRef.current.fftSize = 256;\n          dataArrayRef.current = new Uint8Array(analyserRef.current.frequencyBinCount);\n        }\n      }\n      function animate() {\n        if (analyserRef.current && dataArrayRef.current) {\n          analyserRef.current.getByteFrequencyData(dataArrayRef.current);\n          setFreqData(new Uint8Array(dataArrayRef.current));\n          const avg = dataArrayRef.current.reduce((a, b) => a + b, 0) / dataArrayRef.current.length;\n          if (onAudioLevel) onAudioLevel(avg / 255);\n        }\n        raf = requestAnimationFrame(animate);\n      }\n      setupAudio();\n      animate();\n      return () => {\n        if (raf) cancelAnimationFrame(raf);\n        // Do not close the AudioContext or disconnect the source node, as this can break hot reloads and cause further errors\n      };\n    }, [audioRef]);\n\n    // Mouse parallax effect\n    useEffect(() => {\n      if (!mouseParallax) return;\n      function handleMouse(e) {\n        setMouse({\n          x: (e.clientX / window.innerWidth - 0.5) * 2,\n          y: (e.clientY / window.innerHeight - 0.5) * 2,\n        });\n      }\n      window.addEventListener('mousemove', handleMouse);\n      return () => window.removeEventListener('mousemove', handleMouse);\n    }, [mouseParallax]);\n\n    useFrame(() => {\n      // Camera parallax\n      if (mouseParallax) {\n        camera.position.x = (mouse?.x || 0) * 2;\n        camera.position.y = -(mouse?.y || 0) * 1.2;\n        camera.lookAt(0, 0, 0);\n      }\n      // Animate group for audio reactivity\n      if (group.current) {\n        const audioLevel = freqData.reduce((a, b) => a + b, 0) / freqData.length / 255;\n        group.current.rotation.z = Math.sin(Date.now() / 4000) * 0.1 + audioLevel * 0.2;\n        group.current.rotation.x = Math.cos(Date.now() / 6000) * 0.08 + audioLevel * 0.1;\n      }\n    });\n\n    // Calculate bass level (average of lowest 8 bins)\n    const bassLevel = freqData.slice(0, 8).reduce((a, b) => a + b, 0) / 8 / 255;\n    // Calculate tempo/energy (average of bins 32-128)\n    const tempoLevel = freqData.slice(32, 128).reduce((a, b) => a + b, 0) / 96 / 255;\n\n    // Color palette for cycling: teal, cyan, pink, blue\n    const colorPalette = [\n      [0, 255, 191],   // teal (#00ffbf)\n      [0, 255, 255],   // cyan (#00ffff)\n      [255, 79, 163],  // pink (#ff4fa3)\n      [0, 191, 255],   // blue (#00bfff)\n    ];\n    function lerpColor(a, b, t) {\n      return `rgb(${Math.round(a[0] + (b[0] - a[0]) * t)},${Math.round(a[1] + (b[1] - a[1]) * t)},${Math.round(a[2] + (b[2] - a[2]) * t)})`;\n    }\n\n    // 3D radiating stars and circles\n    return (\n      <group ref={group}>\n        {/* Space background stars */}\n        <Stars\n          radius={120}\n          depth={80}\n          count={18000}\n          factor={2.2}\n          saturation={0.7}\n          fade\n          speed={0.8}\n        />\n        {/* Highly reactive parallax stars (dots) and halftone effect */}\n        {(() => {\n          // Number of dots increases with tempo/energy\n          const baseDots = 80;\n          const extraDots = Math.floor(tempoLevel * 120); // up to +120\n          const totalDots = baseDots + extraDots;\n          return Array.from({ length: totalDots }).map((_, i) => {\n            // Use tempoLevel for radius, color, and z-depth\n            const t = Date.now() / (600 + i * 2);\n            const angle = (i / totalDots) * Math.PI * 2 + t * (0.7 + tempoLevel * 1.5);\n            const r = 3.5 + Math.sin(t + i) * (0.7 + tempoLevel * 2.5);\n            const z = Math.cos(t + i) * (0.7 + tempoLevel * 2.5);\n            const size = 0.06 + tempoLevel * 0.12 + Math.abs(Math.sin(t + i)) * 0.08;\n            const glow = 1.2 + tempoLevel * 3.5 + Math.abs(Math.sin(t + i)) * 1.2;\n            return (\n              <mesh key={i} position={[Math.cos(angle) * r, Math.sin(angle) * r, z]}>\n                <sphereGeometry args={[size, 8, 8]} />\n                <meshStandardMaterial color={'#fffbe0'} emissive={'#ffe14f'} emissiveIntensity={glow} transparent opacity={0.85} />\n              </mesh>\n            );\n          });\n        })()}\n        {/* Multi-layer dynamic radiating rays (stars) */}\n        {(() => {\n          // Layer configs: [count, base radius, speed multiplier]\n          const layers = [\n            [32, 2.5, 1],\n            [24, 3.7, 0.7],\n            [16, 5.2, 0.45],\n          ];\n          return layers.flatMap(([baseRays, baseRadius, speedMult], layerIdx) => {\n            const extraRays = Math.floor((freqData.reduce((a, b) => a + b, 0) / freqData.length) / 12); // up to +20\n            const totalRays = baseRays + extraRays;\n            return Array.from({ length: totalRays }).map((_, i) => {\n              const freqIdx = Math.floor((i / totalRays) * freqData.length);\n              const mag = freqData[freqIdx] || 0;\n              const r = baseRadius + mag / 32 + Math.sin(Date.now() / (600 * speedMult) + i) * (0.2 + mag / 255 * 0.5);\n              const angle = (i / totalRays) * Math.PI * 2 + Date.now() / (900 * speedMult + mag * 2);\n              const z = Math.sin(Date.now() / (1200 * speedMult) + i) * (0.5 + mag / 255 * 2.5);\n              // Glow intensity and size are much higher with bass\n              const glow = 1.5 + bassLevel * 7.5 + mag / 255 * 1.2;\n              const size = 0.18 + mag / 255 * 0.22 + bassLevel * 0.45;\n              // Color cycling\n              const t = ((Date.now() / (1200 * speedMult) + i * 0.13) % 1);\n              const paletteIdx = Math.floor(t * colorPalette.length);\n              const nextIdx = (paletteIdx + 1) % colorPalette.length;\n              const localT = (t * colorPalette.length) % 1;\n              const color = lerpColor(colorPalette[paletteIdx], colorPalette[nextIdx], localT);\n              return (\n                <mesh key={layerIdx + '-' + i} position={[Math.cos(angle) * r, Math.sin(angle) * r, z]}>\n                  <sphereGeometry args={[size, 16, 16]} />\n                  <meshStandardMaterial color={color} emissive={color} emissiveIntensity={glow} />\n                </mesh>\n              );\n            });\n          });\n        })()}\n        {/* Dynamic radiating circles (rings) */}\n        {(() => {\n          // Number of rings increases with music energy\n          const baseRings = 6;\n          const extraRings = Math.floor((freqData.reduce((a, b) => a + b, 0) / freqData.length) / 32); // up to +8\n          const totalRings = baseRings + extraRings;\n          return Array.from({ length: totalRings }).map((_, i) => {\n            // Use low/mid frequency for ring size and z-depth\n            const freqIdx = Math.floor((i / totalRings) * (freqData.length / 2));\n            const mag = freqData[freqIdx] || 0;\n            const baseR = 2.5 + i * 0.7 + mag / 128 + Math.sin(Date.now() / (900 + i * 100)) * (0.2 + mag / 255 * 0.5);\n            const z = Math.cos(Date.now() / 1100 + i) * (0.7 + mag / 255 * 2.5);\n            return (\n              <mesh key={\"ring\"+i} rotation={[0,0,0]} position={[0,0,z]}>\n                <torusGeometry args={[baseR, 0.08 + mag / 255 * 0.12, 32, 64]} />\n                <meshStandardMaterial color={`hsl(${220 + i * 10},100%,70%)`} emissive={`hsl(${220 + i * 10},100%,70%)`} emissiveIntensity={0.25 + mag / 255 * 0.7} transparent opacity={0.45} />\n              </mesh>\n            );\n          });\n        })()}\n      </group>\n    );\n  }\n\n  function RhythmGame({ audioLevel, isPlaying }) {\n    // Lane config\n    const laneX = 0; // Centered\n    const laneWidth = 512; // Use original image width or set to a large value\n    const laneHeight = 700;\n    const [balls, setBalls] = useState([]); // { y: px, hit: bool }\n    const [lastSpawn, setLastSpawn] = useState(Date.now());\n    const [failed, setFailed] = useState(false);\n    const hitZoneY = 420; // px from top\n    const speed = 2.5 + audioLevel * 4; // px/frame, faster with more energy\n\n    // Spawn balls on beat (placeholder: spawn every ~900ms if playing)\n    useEffect(() => {\n      if (!isPlaying || failed) return;\n      const now = Date.now();\n      if (now - lastSpawn > 900 - audioLevel * 400) {\n        setBalls(a => [...a, { y: 0, hit: false }]);\n        setLastSpawn(now);\n      }\n      const id = setTimeout(() => {}, 100);\n      return () => clearTimeout(id);\n    }, [isPlaying, lastSpawn, audioLevel, failed]);\n\n    // Animate balls\n    useEffect(() => {\n      if (!isPlaying || failed) return;\n      let raf;\n      function animate() {\n        setBalls(a => a.map(ball => ({ ...ball, y: ball.y + speed })));\n        raf = requestAnimationFrame(animate);\n      }\n      raf = requestAnimationFrame(animate);\n      return () => cancelAnimationFrame(raf);\n    }, [isPlaying, speed, failed]);\n\n    // Remove balls that are off screen\n    useEffect(() => {\n      setBalls(a => a.filter(ball => !ball.hit && ball.y < hitZoneY + 60));\n    }, [balls]);\n\n    // Listen for song end to fail track\n    useEffect(() => {\n      if (!isPlaying) return;\n      const onEnd = () => setFailed(true);\n      const audio = document.querySelector('audio');\n      if (audio) audio.addEventListener('ended', onEnd);\n      return () => { if (audio) audio.removeEventListener('ended', onEnd); };\n    }, [isPlaying]);\n\n    // Render\n    return (\n      <div style={{\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100vw',\n        height: '100vh',\n        pointerEvents: 'none',\n        zIndex: 8,\n        overflow: 'hidden',\n      }}>\n        {/* Lane main section */}\n        <img src={process.env.PUBLIC_URL + 'https://sinbound.online.s3.amazonaws.com/public/beatmap-element1@2x.png'} style={{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%,-50%)',width:laneWidth,height:laneHeight,zIndex:2,pointerEvents:'none',maxWidth:'90vw'}} alt=\"lane main\" />\n        {/* Falling balls */}\n        {balls.map((ball, i) => (\n          <div key={i} style={{\n            position:'absolute',\n            left:'50%',\n            top:`calc(50% + ${ball.y - laneHeight/2 + 60}px)`,\n            transform:'translateX(-50%)',\n            width:40,\n            height:40,\n            borderRadius:'50%',\n            background:'radial-gradient(circle at 30% 30%, #fff 70%, #6cf 100%)',\n            boxShadow:'0 0 16px #6cf8, 0 0 4px #fff',\n            zIndex:4,\n            pointerEvents:'none',\n            display:'flex',alignItems:'center',justifyContent:'center',fontSize:'2em',color:'#fff',fontWeight:700\n          }}>●</div>\n        ))}\n        {/* Track failed message */}\n        {failed && (\n          <div style={{\n            position:'absolute',\n            left:'50%',\n            top:'40%',\n            transform:'translate(-50%,-50%)',\n            color:'#ff4fa3',\n            fontFamily:'MS Gothic, monospace',\n            fontWeight:700,\n            fontSize:'2.5em',\n            textShadow:'0 0 18px #000,0 0 24px #fff',\n            zIndex:20,\n            pointerEvents:'none',\n            background:'rgba(0,0,0,0.7)',\n            borderRadius:18,\n            padding:'32px 64px',\n          }}>TRACK FAILED</div>\n        )}\n      </div>\n    );\n  }\n\n  // Hide the spin text after 3 seconds\n  useEffect(() => {\n    if (!showSpinText) return;\n    const timeout = setTimeout(() => setShowSpinText(false), 3000);\n    return () => clearTimeout(timeout);\n  }, [showSpinText]);\n\n  // For left-to-right fade, animate a gradient mask\n  const [spinMask, setSpinMask] = useState(0); // 0 to 1\n  useEffect(() => {\n    if (!showSpinText) return;\n    let start = Date.now();\n    let raf;\n    function animate() {\n      const elapsed = Date.now() - start;\n      setSpinMask(Math.min(1, elapsed / 3000));\n      if (elapsed < 3000) raf = requestAnimationFrame(animate);\n    }\n    animate();\n    return () => raf && cancelAnimationFrame(raf);\n  }, [showSpinText]);\n\n  // Well done message state\n  const [showWellDone, setShowWellDone] = useState(false);\n  const [wellDoneSide, setWellDoneSide] = useState('left'); // 'left' or 'right'\n  const [wellDoneMetallic, setWellDoneMetallic] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [spinCursor, setSpinCursor] = useState(false);\n  const [spinStart, setSpinStart] = useState(null);\n  const [spinAngle, setSpinAngle] = useState(0);\n  const [lastMouse, setLastMouse] = useState(null);\n\n  // Mouse spin detection\n  useEffect(() => {\n    let spinning = false;\n    let spinningFast = false;\n    let totalAngle = 0;\n    let lastAngle = null;\n    let lastTime = null;\n    function onMouseMove(e) {\n      const cx = window.innerWidth / 2;\n      const cy = window.innerHeight / 2;\n      const dx = e.clientX - cx;\n      const dy = e.clientY - cy;\n      const angle = Math.atan2(dy, dx);\n      const now = Date.now();\n      if (lastAngle !== null && lastTime !== null) {\n        let delta = angle - lastAngle;\n        // Normalize to [-PI, PI]\n        if (delta > Math.PI) delta -= 2 * Math.PI;\n        if (delta < -Math.PI) delta += 2 * Math.PI;\n        // Only count if mouse is moving (not stuck)\n        if (Math.abs(delta) > 0.01) {\n          totalAngle += delta;\n        }\n        // If not moved for 2s, reset\n        if (now - lastTime > 2000) {\n          totalAngle = 0;\n          setSpinStart(null);\n        }\n        // Metallic/celebratory: 1.5 full circles\n        if (Math.abs(totalAngle) > Math.PI * 2 * 1.5 && !spinningFast) {\n          spinningFast = true;\n          setWellDoneMetallic(true);\n          setShowConfetti(true);\n          setSpinCursor(true);\n          setTimeout(() => setWellDoneMetallic(false), 3000);\n          setTimeout(() => setShowConfetti(false), 2000);\n          setTimeout(() => setSpinCursor(false), 2000);\n        }\n        // Normal: 3 full circles\n        if (Math.abs(totalAngle) > Math.PI * 2 * 3 && !spinning) {\n          spinning = true;\n          setShowWellDone(true);\n          setWellDoneSide(side => side === 'left' ? 'right' : 'left');\n          setTimeout(() => setShowWellDone(false), 2000);\n          totalAngle = 0;\n          setSpinStart(null);\n        }\n      }\n      lastAngle = angle;\n      lastTime = now;\n    }\n    window.addEventListener('mousemove', onMouseMove);\n    return () => window.removeEventListener('mousemove', onMouseMove);\n  }, []);\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      width: '100vw',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      background: 'black',\n      position: 'relative',\n      overflow: 'hidden',\n      border: 'none', // Remove any border\n    }}>\n      {/* Hidden audio element for playback and reactivity */}\n      <audio ref={audioRef} style={{display:'none'}} />\n      {/* Glowing yellow intro text */}\n      {showSpinText && (\n        <div style={{\n          position: 'absolute',\n          left: '50%',\n          top: '38%',\n          transform: 'translate(-50%, -50%)',\n          color: '#ffe14f',\n          fontFamily: 'MS Gothic, monospace',\n          fontWeight: 700,\n          fontSize: '2.2em',\n          textShadow: '0 0 24px #ffe14f, 0 0 12px #fffbe0, 0 0 8px #fff',\n          zIndex: 30,\n          pointerEvents: 'none',\n          background: 'rgba(0,0,0,0.45)',\n          borderRadius: 18,\n          padding: '24px 48px',\n          opacity: showSpinText ? 1 : 0,\n          transition: 'opacity 0.7s',\n          WebkitMaskImage: `linear-gradient(90deg, #fff ${100*spinMask}%, transparent ${100*spinMask+1}%)`,\n          maskImage: `linear-gradient(90deg, #fff ${100*spinMask}%, transparent ${100*spinMask+1}%)`,\n          WebkitMaskSize: '100% 100%',\n          maskSize: '100% 100%',\n          WebkitMaskRepeat: 'no-repeat',\n          maskRepeat: 'no-repeat',\n        }}>\n          Spin gugugugugururgrururgu To make the stars move\n        </div>\n      )}\n      {/* Well done message */}\n      {showWellDone && (\n        <div style={{\n          position: 'absolute',\n          top: '44%',\n          left: wellDoneSide === 'left' ? '12%' : 'auto',\n          right: wellDoneSide === 'right' ? '12%' : 'auto',\n          transform: 'translateY(-50%)',\n          fontFamily: 'MS Gothic, monospace',\n          fontWeight: 900,\n          fontSize: '2.6em',\n          background: 'rgba(0,0,0,0.32)',\n          borderRadius: 18,\n          padding: '28px 64px',\n          zIndex: 40,\n          pointerEvents: 'none',\n          color: '#fff',\n          textShadow: wellDoneMetallic ? '0 0 8px #ffe14f, 0 0 4px #fffbe0' : '0 0 4px #ffe14f',\n          backgroundImage: wellDoneMetallic\n            ? 'linear-gradient(90deg, #fffbe0 0%, #ffe14f 30%, #ff4fa3 60%, #b0cfff 100%)'\n            : 'linear-gradient(90deg, #ffe14f 0%, #ff4fa3 100%)',\n          WebkitBackgroundClip: 'text',\n          WebkitTextFillColor: 'transparent',\n          filter: wellDoneMetallic\n            ? 'drop-shadow(0 0 8px #ffe14f) drop-shadow(0 0 4px #fffbe0) brightness(1.2)'\n            : 'drop-shadow(0 0 4px #ffe14f)',\n          opacity: showWellDone ? 1 : 0,\n          transition: 'opacity 0.7s',\n          animation: showWellDone ? 'fadeInOut 2s' : 'none',\n        }}>\n          <span style={{\n            background: wellDoneMetallic\n              ? 'linear-gradient(120deg, #fffbe0 0%, #ffe14f 30%, #ff4fa3 60%, #b0cfff 100%)'\n              : 'none',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            display: 'inline-block',\n            position: 'relative',\n            overflow: 'hidden',\n          }}>\n            Well done!\n            {wellDoneMetallic && (\n              <span style={{\n                position: 'absolute',\n                left: 0,\n                top: 0,\n                width: '100%',\n                height: '100%',\n                background: 'linear-gradient(90deg, rgba(255,255,255,0.7) 0%, rgba(255,255,255,0.1) 60%, transparent 100%)',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent',\n                animation: 'shine 1.2s linear',\n                pointerEvents: 'none',\n              }} />\n            )}\n          </span>\n        </div>\n      )}\n      {/* Confetti effect */}\n      {showConfetti && (\n        <div style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          width: '100vw',\n          height: '100vh',\n          zIndex: 100,\n          pointerEvents: 'none',\n        }}>\n          {Array.from({ length: 48 }).map((_, i) => {\n            const color = ['#ffe14f','#ff4fa3','#00ffbf','#00bfff','#fffbe0'][i%5];\n            const left = Math.random()*100;\n            const top = Math.random()*100;\n            const rotate = Math.random()*360;\n            const size = 16+Math.random()*18;\n            return <div key={i} style={{\n              position:'absolute',\n              left:`${left}%`,\n              top:`${top}%`,\n              width:size,\n              height:size,\n              borderRadius:4,\n              background:color,\n              opacity:0.85,\n              transform:`rotate(${rotate}deg)`,\n              boxShadow:`0 0 12px 2px ${color}`,\n              animation:'confetti-fall 2s linear',\n            }} />;\n          })}\n        </div>\n      )}\n      {/* Spinning cursor effect */}\n      {spinCursor && (\n        <style>{`\n          html, body { cursor: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\"><circle cx=\"16\" cy=\"16\" r=\"12\" fill=\"%23ffe14f\" stroke=\"%23ff4fa3\" stroke-width=\"4\"/></svg>') 16 16, auto !important; }\n          @keyframes shine { 0%{left:-100%;} 100%{left:100%;} }\n          @keyframes confetti-fall { 0%{opacity:1;transform:translateY(-40px);} 100%{opacity:0;transform:translateY(100vh);} }\n          @keyframes fadeInOut { 0%{opacity:0;} 10%{opacity:1;} 90%{opacity:1;} 100%{opacity:0;} }\n        `}</style>\n      )}\n      <Canvas style={{position:'absolute',top:0,left:0,width:'100vw',height:'100vh',zIndex:1}} camera={{ position: [0, 0, 8], fov: 70 }}>\n        <ParallaxUniverse audioRef={audioRef} mouseParallax={true} onAudioLevel={setAudioLevel} />\n        {/* Optionally add <OrbitControls enableZoom={false} enablePan={false} /> for debug */}\n      </Canvas>\n      {/* Track info above controls */}\n      {tracks.length > 0 && (\n        <div style={{\n          position: 'absolute',\n          left: '50%',\n          bottom: '16vh',\n          transform: 'translateX(-50%)',\n          zIndex: 12,\n          textAlign: 'center',\n          color: '#fff',\n          fontFamily: 'MS Gothic, MS PGothic, Meiryo, monospace',\n          fontSize: '1.45em',\n          letterSpacing: 1,\n          textShadow: '0 0 8px #000, 0 0 16px #6cf',\n          background: 'rgba(0,0,0,0.32)',\n          borderRadius: 12,\n          padding: '10px 32px 8px 32px',\n          fontWeight: 600,\n          maxWidth: 520,\n          pointerEvents: 'none',\n        }}>\n          <div style={{fontSize:'1.1em',marginBottom:2}}>{tracks[current].title}</div>\n          <div style={{fontSize:'0.95em',color:'#6cf',fontWeight:400}}>{tracks[current].artist}</div>\n        </div>\n      )}\n      <RhythmGame audioLevel={audioLevel} isPlaying={isPlaying} />\n      {/* Custom player controls and progress bar */}\n      <div style={{\n        position: 'absolute',\n        left: '50%',\n        bottom: 48,\n        transform: 'translateX(-50%)',\n        zIndex: 30,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: 'min(480px, 90vw)',\n        pointerEvents: 'auto',\n      }}>\n        <div style={{display:'flex',flexDirection:'row',alignItems:'center',justifyContent:'center',gap:32,marginBottom:18}}>\n          <button onClick={handlePrev} style={{background:'none',border:'none',cursor:'pointer',padding:0}}>\n            <img src={process.env.PUBLIC_URL + 'https://sinbound.online.s3.amazonaws.com/public/trackplayer-lasttrackbutton.png'} alt=\"Prev\" style={{height:'2.2em',width:'auto',filter:'drop-shadow(0 0 8px #6cf8)'}} />\n          </button>\n          <button onClick={isPlaying ? handlePause : handlePlay} style={{background:'none',border:'none',cursor:'pointer',padding:0}}>\n            <img src={process.env.PUBLIC_URL + (isPlaying ? 'https://sinbound.online.s3.amazonaws.com/public/trackplayer-pausebutton.png' : 'https://sinbound.online.s3.amazonaws.com/public/trackplayer-playbutton.png')} alt={isPlaying ? 'Pause' : 'Play'} style={{height:'2.2em',width:'auto',filter:'drop-shadow(0 0 8px #ffe14f)'}} />\n          </button>\n          <button onClick={handleNext} style={{background:'none',border:'none',cursor:'pointer',padding:0}}>\n            <img src={process.env.PUBLIC_URL + 'https://sinbound.online.s3.amazonaws.com/public/trackplayer-nextbutton.png'} alt=\"Next\" style={{height:'2.2em',width:'auto',filter:'drop-shadow(0 0 8px #6cf8)'}} />\n          </button>\n        </div>\n        {/* Progress bar */}\n        <div\n          onClick={handleSeek}\n          style={{\n            width: '100%',\n            height: 18,\n            borderRadius: 12,\n            background: 'rgba(255,225,79,0.13)',\n            boxShadow: '0 0 16px #ffe14f88',\n            position: 'relative',\n            cursor: 'pointer',\n            overflow: 'hidden',\n            marginTop: 2,\n            marginBottom: 2,\n            border: '2px solid #ffe14f',\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              left: 0,\n              top: 0,\n              height: '100%',\n              width: `${Math.max(0, Math.min(1, trackProgress)) * 100}%`,\n              borderRadius: 12,\n              background: 'linear-gradient(90deg, #ffe14f 60%, #fffbe0 100%)',\n              boxShadow: '0 0 24px 8px #ffe14f, 0 0 12px 2px #fffbe0',\n              transition: 'width 0.2s',\n              filter: 'blur(0.5px) brightness(1.2)',\n            }}\n          />\n        </div>\n        {/* Time left */}\n        <div style={{color:'#ffe14f',fontFamily:'MS Gothic, monospace',fontSize:'0.95em',marginTop:2,textShadow:'0 0 6px #fffbe0'}}>\n          {trackDuration > 0 ?\n            `-${Math.max(0, Math.floor(trackDuration - trackCurrent)).toString().padStart(2, '0')}:${((trackDuration - trackCurrent) % 60).toFixed(0).padStart(2, '0')}`\n            : ''}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":["version","getVersion","parseInt","REVISION","replace","StarfieldMaterial","ShaderMaterial","constructor","super","uniforms","time","value","fade","vertexShader","fragmentShader","genStar","r","Vector3","setFromSpherical","Spherical","Math","acos","random","PI","Stars","React","_ref","ref","radius","depth","count","saturation","factor","speed","material","position","color","size","positions","colors","sizes","Array","from","length","Color","increment","i","push","toArray","setHSL","g","b","Float32Array","useFrame","state","current","clock","elapsedTime","starfieldMaterial","attach","args","object","blending","AdditiveBlending","depthWrite","transparent","vertexColors","TrackPlayer","cameraState","tracks","setTracks","useState","setCurrent","audioRef","useRef","isPlaying","setIsPlaying","mouseParallax","setMouseParallax","audioLevel","setAudioLevel","showSpinText","setShowSpinText","needsUserInteraction","setNeedsUserInteraction","useEffect","fetch","then","res","json","data","mixId","URLSearchParams","window","location","search","get","filtered","filter","song","String","id","catch","src","link","play","pause","trackProgress","setTrackProgress","trackDuration","setTrackDuration","trackCurrent","setTrackCurrent","audio","addEventListener","updateProgress","removeEventListener","currentTime","duration","handlePrev","prev","handleNext","next","savedPlaying","localStorage","getItem","savedTrack","Number","err","name","onUserInteract","finally","setItem","onLoaded","paused","syncState","ended","ParallaxUniverse","_ref2","onAudioLevel","group","camera","gl","scene","useThree","mouse","setMouse","x","y","audioCtxRef","analyserRef","dataArrayRef","freqData","setFreqData","Uint8Array","raf","_mediaElementSourceNode","AudioContext","webkitAudioContext","createMediaElementSource","createAnalyser","connect","destination","fftSize","frequencyBinCount","animate","getByteFrequencyData","avg","reduce","a","requestAnimationFrame","cancelAnimationFrame","handleMouse","e","clientX","innerWidth","clientY","innerHeight","lookAt","rotation","z","sin","Date","now","cos","bassLevel","slice","tempoLevel","colorPalette","_jsxs","children","_jsx","totalDots","floor","map","_","t","angle","abs","glow","emissive","emissiveIntensity","opacity","flatMap","_ref3","layerIdx","baseRays","baseRadius","speedMult","totalRays","freqIdx","mag","paletteIdx","round","lerpColor","totalRings","baseR","RhythmGame","_ref4","balls","setBalls","lastSpawn","setLastSpawn","failed","setFailed","hit","setTimeout","clearTimeout","ball","hitZoneY","onEnd","document","querySelector","style","left","top","width","height","pointerEvents","zIndex","overflow","transform","maxWidth","alt","laneHeight","borderRadius","background","boxShadow","display","alignItems","justifyContent","fontSize","fontWeight","fontFamily","textShadow","padding","timeout","spinMask","setSpinMask","start","elapsed","min","showWellDone","setShowWellDone","wellDoneSide","setWellDoneSide","wellDoneMetallic","setWellDoneMetallic","showConfetti","setShowConfetti","spinCursor","setSpinCursor","spinStart","setSpinStart","spinAngle","setSpinAngle","lastMouse","setLastMouse","spinning","spinningFast","totalAngle","lastAngle","lastTime","onMouseMove","cx","cy","dx","dy","atan2","delta","side","minHeight","flexDirection","border","transition","WebkitMaskImage","maskImage","WebkitMaskSize","maskSize","WebkitMaskRepeat","maskRepeat","right","backgroundImage","WebkitBackgroundClip","WebkitTextFillColor","animation","rotate","Canvas","fov","bottom","textAlign","letterSpacing","marginBottom","title","artist","gap","onClick","cursor","handlePause","handlePlay","rect","target","getBoundingClientRect","percent","max","marginTop","toString","padStart","toFixed"],"sourceRoot":""}